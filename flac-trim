#!/bin/bash

#################################################################################
#                   __ _                 _        _                             #
#                  / _| | __ _  ___     | |_ _ __(_)_ __ ___                    #
#                 | |_| |/ _` |/ __|____| __| '__| | '_ ` _ \                   #
#                 |  _| | (_| | (_|_____| |_| |  | | | | | | |                  #
#                 |_| |_|\__,_|\___|     \__|_|  |_|_| |_| |_|                  #
#                                                                               #
#                                                                               #
# MIT License                                                                   #
# Copyright (c) 2019 Massimo Pissarello                                         #
# Permission is hereby granted, free of charge, to any person obtaining a copy  #
# of this software and associated documentation files (the "Software"), to deal #
# in the Software without restriction, including without limitation the rights  #
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell     #
# copies of the Software, and to permit persons to whom the Software is         #
# furnished to do so, subject to the following conditions:                      #
# The above copyright notice and this permission notice shall be included in    #
# all copies or substantial portions of the Software.                           #
#                                                                               #
#################################################################################


# apt update && apt install bc ffmpeg file flac -y

######################## CHANGE ########################
PATH1=/mnt/c/Users/mpiss/Desktop/flac ### CHANGE       #
PATH2=/mnt/d/Music/digital/flac ### CHANGE             #
########################################################
#                                                      #
MP3VBR=3 ### CHANGE                                    #
############ MP3 VBR Encoding ############             #
# Average kbit/s | Range kbit/s | OPTION #             #
#       225      |    190-250   |    1   #             #
#       190      |    170-210   |    2   #             #
#       175      |    150-195   |    3   #             #
#       165      |    140-185   |    4   #             #
#       130      |    120-150   |    5   #             #
#       115      |    100-130   |    6   #             #
#       100      |     80-120   |    7   #             #
#        85      |     70-105   |    8   #             #
#        65      |     45-85    |    9   #             #
##########################################             #
#                                                      #
ENCODEDBY="Massimo Bremi DJ" ### CHANGE                #
GENRE="Disco" ### CHANGE                               #
#                                                      #
########################################################


tput clear

EXT=.flac
ID=tag
IMG=folder
OR=1_original
TR=2_trimmed
CO=3_cover


ffmpeg_flac_norm() {
	echo "Normalize to 0Db..."
	ffmpeg -i "${FILE}" -af "volume=${DBLEVEL}dB","silenceremove=1:0:-72dB","adelay=250|250" \
		-metadata ENCODEDBY="$ENCODEDBY" -metadata GENRE="$GENRE" \
		-metadata:s:0:1 comment="" -metadata:s:0:1 comment="Cover (front)" \
		-sample_fmt s16 -ar 44100 $PATHSAVE/"${FILE}" -loglevel error
}

ffmpeg_flac() {
	ffmpeg -i "${FILE}" -af "silenceremove=1:0:-72dB","adelay=250|250" \
		-metadata ENCODEDBY="$ENCODEDBY" -metadata GENRE="$GENRE" \
		-metadata:s:0:1 comment="" -metadata:s:0:1 comment="Cover (front)" \
		-sample_fmt s16 -ar 44100 $PATHSAVE/"${FILE}" -loglevel error
}


echo "Please choose the directory to save your file(s):"
echo "1) Desktop" && echo "2) Music" && echo
read number
echo
echo "Please choose extension to save your file(s):"
echo "1) FLAC" && echo "2) MP3" && echo
read number2
if [ $number2 -eq 1 ]; then
	echo
	echo "Please choose volume output of your trimmed file(s):"
	echo "1) Normalize to 0dB" && echo "2) Scan for ReplayGain as single track" && echo "3) Scan for ReplayGain as album" && echo
	read number3
else
	number3=0
fi

if [ $number -eq 1 ]; then
	mkdir -p $PATH1/$OR $PATH1/$TR $PATH1/$CO
	PATHLOAD=$PATH1/$OR
	PATHSAVE=$PATH1/$TR
	PATHIMG=$PATH1/$CO
else
	if [ $number -eq 2 ]; then
		mkdir -p $PATH2/$OR $PATH2/$TR $PATH2/$CO
		PATHLOAD=$PATH2/$OR
		PATHSAVE=$PATH2/$TR
		PATHIMG=$PATH2/$CO
	fi
fi

echo && echo "Please put your $EXT file(s) in $PATHLOAD"
read -rsn1 -p "After press any key to continue"
echo

cd $PATHLOAD

if [[ `ls -1 | grep $EXT | wc -l` = 0 ]]; then
	echo && echo "Not found files with" $EXT "extension in" $PATHLOAD
	echo "Please restart script" && echo && echo
else
	echo && echo "Found" `ls -1 | grep $EXT | wc -l` "file(s) with" $EXT "extension in" $PATHLOAD && echo && echo && sleep 1
	n=0

	for FILE in *${EXT}; do
		let n=n+1
		echo "Processing file" $n "of" `ls -1 | grep $EXT | wc -l`...
		echo "`ffprobe -i "${FILE}" -v quiet -print_format json -show_format -hide_banner`" > $ID
		sed -i -e 's/\\\"//g' -e 's/ \/ / /g' -e 's/\///g' -e "s/''//g" $ID
		ARTIST=`grep ARTIST $ID | awk -F': "' '{print $2}' | cut -d'"' -f1`
		TITLE=`grep TITLE $ID | awk -F': "' '{print $2}' | cut -d'"' -f1`
		ALBUM=`grep ALBUM $ID | awk -F': "' '{print $2}' | cut -d'"' -f1`
		YEAR=`grep DATE $ID | awk -F': "' '{print $2}' | cut -d'"' -f1`
		DBLEVEL=`ffmpeg -i "${FILE}" -af "volumedetect" -f null /dev/null 2>&1 | grep max_volume | awk -F': ' '{print $2}' | cut -d' ' -f1`
		COMPRESULT=`echo ${DBLEVEL}'<'0 | bc -l`
		DBLEVEL=`echo "-(${DBLEVEL})" | bc -l`

		metaflac --export-picture-to="${PATHIMG}"/"${IMG}" "${FILE}"
		IMGEXT=`file "${PATHIMG}"/"${IMG}" | awk -F': ' '{print $2}' | cut -d' ' -f1 | sed -e 's/\(.*\)/\L\1/'`
		mv "${PATHIMG}"/"${IMG}" "${PATHIMG}"/"${ARTIST} - ${ALBUM} ($YEAR).${IMGEXT}"

		echo "ARTIST:" $ARTIST
		echo "ALBUM:" $ALBUM
		echo "SONG TITLE:" $TITLE
		echo "FILE NAME:" "${ARTIST} - ${TITLE}${EXT}"
		echo "YEAR:" $YEAR
		echo "SONG LEVEL: -$DBLEVEL dB"

		if [ $number2 -eq 1 ]; then
			if [ $number3 -eq 2 ]; then
				ffmpeg_flac && mv -f $PATHSAVE/"${FILE}" $PATHSAVE/"${ARTIST} - ${TITLE}${EXT}"
				echo "Scanning for ReplayGain as track..."
				metaflac --add-replay-gain $PATHSAVE/"${ARTIST} - ${TITLE}${EXT}"
			else
				if [ $number3 -eq 1 ]; then
					ffmpeg_flac_norm && mv -f $PATHSAVE/"${FILE}" $PATHSAVE/"${ARTIST} - ${TITLE}${EXT}"
				else
					if [ $number3 -eq 3 ]; then
						ffmpeg_flac && mv -f $PATHSAVE/"${FILE}" $PATHSAVE/"${ARTIST} - ${TITLE}${EXT}"
					fi
				fi
			fi
		else
			if [ $number2 -eq 2 ]; then
				DBLEVEL=`echo "$DBLEVEL -0.5" | bc`
				echo "To avoid possible clipping, file will be normalized to -0.5dB (will be added +"$DBLEVEL"dB)"
				echo && echo "Encoding to MP3 with VBR "$MP3VBR": it will take time..."
				ffmpeg -i "${FILE}" -af "volume=${DBLEVEL}dB","silenceremove=1:0:-72dB","adelay=250|250" \
					-metadata ENCODEDBY="$ENCODEDBY" -metadata GENRE="$GENRE" \
					-metadata:s:0:1 comment="" -metadata:s:0:1 comment="Cover (front)" \
					-c:a libmp3lame -q:a $MP3VBR -ar 44100 $PATHSAVE/"${FILE}".mp3 -loglevel error
				mv -f $PATHSAVE/"${FILE}".mp3 $PATHSAVE/"${ARTIST} - ${TITLE}".mp3
			fi
		fi
		echo "*********** DONE! ***********"
		echo
	done
	if [ $number3 -eq 3 ]; then
		echo && echo "Scanning for ReplayGain as album..."
		metaflac --add-replay-gain $PATHSAVE/*$EXT
	fi
	echo && echo "***** All songs have been trimmed and/or converted! *****"
	echo && echo
fi

rm -f $ID

exit 0
